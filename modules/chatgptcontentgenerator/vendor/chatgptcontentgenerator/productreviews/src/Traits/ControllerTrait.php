<?php

namespace Chatgptcontentgenerator\ProductReviews\Traits;

use Chatgptcontentgenerator\ProductReviews\Api\Client;
use Chatgptcontentgenerator\ProductReviews\Models\GptcontentReview;

trait ControllerTrait
{
    protected $apiClient;

    public function postProcess()
    {
        if ($this->isActive() == false) {
            return $this->errorResponse(500, sprintf('The component %s disbaled', $this->getTitle()));
        }

        $this->apiClient = new Client(
            $this->module->getConfigGlobal('SHOP_UID')
        );
        $this->apiClient->setToken($this->module->getConfigGlobal('SHOP_TOKEN'));
        $this->apiClient->setGptApiKey($this->module->getConfigGlobal('GPT_API_KEY', null, ''));

        $action = \Tools::getValue('action');
        return $this->{'ajaxProcess' . \Tools::toCamelCase($action)}();
    }

    private function ajaxProcessGenerateReviewByProductId()
    {
        $id_product = (int) \Tools::getValue('id_product');
        $id_lang = (int) \Tools::getValue('id_language');
        $rate = (float) \Tools::getValue('rate');
        $language = new \Language($id_lang);

        $length = \Tools::getValue('length');
        if (!is_numeric($length)) {
            $length = 0;
        }

        $warning = '';

        try {
            $product = new \Product($id_product, false, $id_lang);
            if (!\Validate::isLoadedObject($product)) {
                throw new \Exception('Product ' . $id_product . ' product not found');
            }

            $review = $this->apiClient->generateProductReview(
                trim($product->name),                
                $language->iso_code,                
                $rate,
                $length,
                $product->description
            );

            $node = new GptcontentReview();
            $node->id_product = $id_product;
            $node->rate = $rate;
            $node->active = \Tools::getValue('status') == 1;
            $node->author = trim($review['author']);
            $node->description = $review['text'];
            $node->public_date = date('Y-m-d H:i:s', \Tools::getValue('public_date'));
            $node->add();

            if (trim($product->description) == '') {
                $warning = $this->getTranslator()->trans('Some products have an empty "description" - this affects the quality of reviews generated by ChatGPT', [], 'Modules.Chatgptcontentgenerator.Admin');
            }
        } catch (\Exception $e) {
            return $this->jsonExeptionResponse($e);
        }

        return $this->jsonResponse([
            'text' => $review['text'],
            'nbWords' => (!isset($review['nbWords']) ? str_word_count($review['text']) : $review['nbWords']),
            'inQueue' => $review['inQueue'],
            'requestId' => $review['requestId'],
            'reviewId' => (int) $node->id,
            'warning' => $warning,
        ]);
    }
}
